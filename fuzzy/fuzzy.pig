register '/opt/rb/var/rb-sequence-oozie/workflow/lib/rb-malware-pig.jar'

%declare hdfs 'rbh5bs0rffk2'

A = LOAD '/user/oozie/fuzzy/*' USING JsonLoader('sdhash:chararray,SHA256:chararray,pehash:chararray,ssdeep:chararray');
SDHASH = foreach A generate SHA256,sdhash;
SSDEEP= foreach A generate SHA256,ssdeep;
PEHASH = foreach A generate SHA256,pehash;
SDHASH_STORED = LOAD '/user/oozie/sdhash/last/*' USING PigStorage(',') as (SHA256:chararray,sdhash:chararray);
SSDEEP_STORED = LOAD '/user/oozie/ssdeep/last/*' USING PigStorage(',') as (SHA256:chararray,ssdeep:chararray);

SDHASH_NEW = UNION SDHASH, SDHASH_STORED;
SSDEEP_NEW = UNION SSDEEP, SSDEEP_STORED;

SDHASH_TOSTORE = DISTINCT SDHASH_NEW;
SSDEEP_TOSTORE = DISTINCT SSDEEP_NEW;

STORE SDHASH_TOSTORE INTO '/user/oozie/sdhash/current' USING PigStorage(',');
SDHASH_TOCOMPARE = LOAD '/user/oozie/sdhash/current/*' USING PigStorage(',') as (SHA256:chararray,sdhash:chararray);

STORE SSDEEP_TOSTORE INTO '/user/oozie/ssdeep/current' using PigStorage(',');
SSDEEP_TOCOMPARE = LOAD '/user/oozie/ssdeep/current/*' USING PigStorage(',') as (SHA256:chararray,ssdeep:chararray);

rm /user/oozie/sdhash_scores
SDHASH_SCORES = FOREACH SDHASH_TOSTORE GENERATE net.redborder.malware.loaders.sdhash.Sdhash(SHA256,sdhash, 'rbh5bs0rffk2');
STORE SDHASH_SCORES INTO '/user/oozie/sdhash_scores' USING net.redborder.malware.storage.KafkaStorage('rb_malware', 'rbtpcxii6ok1:9092');
STORE SDHASH_SCORES INTO '/user/oozie/sdhash_scores/' USING PigStorage (',');

rm /user/oozie/ssdeep_scores
SSDEEP_SCORES = FOREACH	SSDEEP_TOSTORE GENERATE net.redborder.malware.loaders.ssdeep.Ssdeep(SHA256,ssdeep, 'rbh5bs0rffk2');
STORE SSDEEP_SCORES INTO '/user/oozie/ssdeep_scores/' USING net.redborder.malware.storage.KafkaStorage('rb_malware', 'rbtpcxii6ok1:9092');
STORE SSDEEP_SCORES INTO '/user/oozie/ssdeep_scores/' USING PigStorage (',');

rm  /user/oozie/ssdeep/last
rm /user/oozie/sdhash/last
mv /user/oozie/ssdeep/current /user/oozie/ssdeep/last/
mv /user/oozie/sdhash/current /user/oozie/sdhash/last/
