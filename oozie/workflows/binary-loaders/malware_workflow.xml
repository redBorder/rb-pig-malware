<workflow-app xmlns="uri:oozie:workflow:0.3" name="pig-test">

    <start to="virustotal" />

    <action name="virustotal">
        <pig>
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
                <property>
                    <name>mapred.compress.map.output</name>
                    <value>true</value>
                </property>
            </configuration>
            <script>virustotal.pig</script>
            <param>INPUT='hdfs://andres02:8020/user/pig/malware'</param>
            <param>OUTPUT='hdfs://andres02:8020/user/pig/virustotal.out'</param>
            <param>TIMEOUT_MS='180000'</param>
            <param>USE_DEVSHM='true'</param>
            <file>${malware_library}</file>
            <archive>hdfs://andres02:8020/user/root/md5ToAnalize.json#md5ToAnalize.json</archive>
        </pig>
        <ok to="makeDecision" />
        <error to="fail" />
    </action>

    <decision name="makeDecision">
        <switch>
            <case to="clamscan">${fs:exists('hdfs://andres02:8020/user/root/md5ToAnalize.json')=="true"}</case>
            <case to="end">${fs:exists('hdfs://andres02:8020/user/root/md5ToAnalize.json')=="false"}</case>
            <default to="fail" />
        </switch>
    </decision>

    <action name="clamscan">
        <pig>
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <prepare>
                <delete path="${name_node}/user/${wf:user()}/${examplesRoot}/output-data/pig" />
            </prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
                <property>
                    <name>mapred.compress.map.output</name>
                    <value>true</value>
                </property>
            </configuration>
            <script>clamscan.pig</script>
            <param>INPUT='hdfs://andres02:8020/user/pig/malware'</param>
            <param>OUTPUT='hdfs://andres02:8020/user/pig/clamscan.out'</param>
            <param>TIMEOUT_MS='180000'</param>
            <param>USE_DEVSHM='true'</param>
            <file>${malware_library}</file>
            <archive>hdfs://andres02:8020/user/root/md5ToAnalize.json#md5ToAnalize.json</archive>
        </pig>
        <ok to="cleanerJava" />
        <error to="fail" />
    </action>

    <action name="cleanerJava">
        <java>
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <prepare>
                <delete path="${name_node}/user/${wf:user()}/${examplesRoot}/output-data/pig" />
            </prepare>
            <configuration>
                <property>
                    <name>mapred.queue.name</name>
                    <value>default</value>
                </property>
                <property>
                    <name>mapreduce.framework.name</name>
                    <value>yarn</value>
                </property>
            </configuration>
            <main-class>net.redborder.malware.oozie.javactions.CleanerOozieAction</main-class>
            <arg>hdfs://andres02:8020/user/pig/clean.json</arg>
            <archive>hdfs://andres02:8020/user/root/md5ToAnalize.json#md5ToAnalize.json</archive>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>

    <kill name="fail">
        <message>Pig failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>

    <end name="end" />

</workflow-app>